using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Player : MonoBehaviour
{
    Rigidbody2D rigid;
    Animator ani;
    SpriteRenderer spr;
    public float maxspeed;
    public float jump;
    public float jumpcnt;

    void Start()
    {
        rigid = GetComponent<Rigidbody2D>();
        ani = GetComponent<Animator>();
        spr = GetComponent<SpriteRenderer>();
    }

    
    void Update()
    {
        pmove();
        pjump();
        panime();
    }
   void pmove()
    {
        //move
        float h = Input.GetAxisRaw("Horizontal");
        rigid.AddForce(Vector2.right * h, ForceMode2D.Impulse);


        //stopmove
        if (Input.GetButtonUp("Horizontal"))
        {
            rigid.velocity = new Vector2(rigid.velocity.normalized.x * 0.01f, rigid.velocity.y);
        }

        //maxspeed
        if (rigid.velocity.x > maxspeed)
            rigid.velocity = new Vector2(maxspeed, rigid.velocity.y);
        else if (rigid.velocity.x < maxspeed * (-1))
            rigid.velocity = new Vector2(maxspeed * (-1), rigid.velocity.y);

        // direction sprite
        if (Input.GetButton("Horizontal"))
            spr.flipX = Input.GetAxisRaw("Horizontal") == -1;
    }
    void pjump()
    {
        //jump
        if (Input.GetButtonDown("Jump") && jumpcnt < 2)
        {
            rigid.AddForce(Vector3.up * jump, ForceMode2D.Impulse);
            jumpcnt++;
        }

        // player ray
        RaycastHit2D rayhit = Physics2D.Raycast(rigid.position, Vector3.down, 1, LayerMask.GetMask("ground"));
        if (rayhit.collider.tag == "ground")
        {
            if (rigid.velocity.y <= 0)
                jumpcnt = 0;
        }
    }
    void panime()
    {
        if (rigid.velocity.x == 0)
            ani.SetBool("isIdle", true);
        else ani.SetBool("isIdle", false);

        if (rigid.velocity.x > 0 || rigid.velocity.x < 0)
            ani.SetBool("isRun", true);
        else ani.SetBool("isRun", false);
        if (rigid.velocity.y != 0)
        {
            ani.SetBool("isJump", true);
            ani.SetBool("isIdle", false);
            ani.SetBool("isRun", false);
        }
        else ani.SetBool("isJump", false);
    }
}
